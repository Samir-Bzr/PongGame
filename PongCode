#include <iostream>
#include <conio.h>  // For _kbhit() and _getch() on Windows
#include <windows.h>
using namespace std;

// Simple sleep function
void sleep_ms(int ms) {
    Sleep(ms);
}

// Draw the game board
void draw(int ballX, int ballY, int leftPaddleY, int rightPaddleY, int score1, int score2) {
    system("cls"); // Clear screen

    for (int y = 0; y < 20; y++) {
        for (int x = 0; x < 40; x++) {
            if (y == 0 || y == 19) cout << "-"; // Top and bottom borders
            else if (x == 0 || x == 39) cout << "|"; // Side borders
            else if (x == 2 && y >= leftPaddleY && y < leftPaddleY + 3) cout << "#"; // Left paddle
            else if (x == 37 && y >= rightPaddleY && y < rightPaddleY + 3) cout << "#"; // Right paddle
            else if (x == ballX && y == ballY) cout << "O"; // Ball
            else cout << " ";
        }
        cout << "\n";
    }
    cout << "Player 1: " << score1 << "  Player 2: " << score2 << endl;
    cout << "Controls: W/S (Left) | Up/Down (Right) | Q to quit" << endl;
}

int main() {
    int ballX = 20, ballY = 10;
    int ballDirX = 1, ballDirY = 1;
    int leftPaddleY = 8, rightPaddleY = 8;
    int score1 = 0, score2 = 0;
    bool running = true;

    while (running) {
        draw(ballX, ballY, leftPaddleY, rightPaddleY, score1, score2);

        // Input controls
        if (_kbhit()) {
            char ch = _getch();
            if (ch == 'q' || ch == 'Q') running = false;
            if (ch == 'w' || ch == 'W') leftPaddleY--;
            if (ch == 's' || ch == 'S') leftPaddleY++;
            if (ch == 72) rightPaddleY--; // Up arrow
            if (ch == 80) rightPaddleY++; // Down arrow
        }

        // Ball movement
        ballX += ballDirX;
        ballY += ballDirY;

        // Collision with top and bottom walls
        if (ballY == 1 || ballY == 18) ballDirY = -ballDirY;

        // Collision with left paddle
        if (ballX == 3 && ballY >= leftPaddleY && ballY < leftPaddleY + 3)
            ballDirX = -ballDirX;

        // Collision with right paddle
        if (ballX == 36 && ballY >= rightPaddleY && ballY < rightPaddleY + 3)
            ballDirX = -ballDirX;

        // Scoring
        if (ballX <= 0) { score2++; ballX = 20; ballY = 10; ballDirX = 1; }
        if (ballX >= 39) { score1++; ballX = 20; ballY = 10; ballDirX = -1; }

        // Prevent paddles from going out of bounds
        if (leftPaddleY < 1) leftPaddleY = 1;
        if (leftPaddleY > 16) leftPaddleY = 16;
        if (rightPaddleY < 1) rightPaddleY = 1;
        if (rightPaddleY > 16) rightPaddleY = 16;

        sleep_ms(100);
    }

    cout << "Game Over! Final Score: " << score1 << " - " << score2 << endl;
    return 0;
}
